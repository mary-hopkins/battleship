{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ships.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Ship","shipLength","sunk","healthBar","coordinates","getshipLength","getSunk","getCoords","getHealthBar","hit","number","index","indexOf","hitCounter","checkSunk","Gameboard","playerNumber","defeated","newSquare","struck","hasShip","squareId","push","makeCoordinates","shipsArray","findSquare","coord","length","currentSquare","checkDefeat","fleet","getPlayerNumber","getCoord","num","createShip","size","coords","newShip","placeShip","receiveAttack","targetSquare","includes","findShip","getDefeated","newGame","playersArray","createPlayer","newPlayer","gameBoard","findLegalMove","humanGB","randoNumber","Math","floor","random","getGameBoard","humanShootsComputer","compGB","testHitAllSquares","exemption","computerShootsHuman","legalMove","Player","getPlayer","Game","humanPlayer","computerPlayer","computerGB","document","addEventListener","console","log","humanFleet","querySelector","humanCoordinates","newTile","createElement","classList","add","setAttribute","appendChild","createHumanFleet"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\n// factory function to create ships\nconst Ship = (\n    shipLength,\n    sunk,\n    healthBar,\n    coordinates = healthBar\n  ) => {\n  \n    const getshipLength = () => shipLength;\n    const getSunk = () => sunk;\n    const getHealthBar = () => healthBar;\n    const getCoords = () => coordinates;\n  \n    const checkSunk = function () {\n      let hitCounter = 0;\n      for(let i = 0; i < shipLength; i++) {\n        if(healthBar[i] == \"X\") {\n          hitCounter = hitCounter + 1;\n        }\n      }\n      if(hitCounter == shipLength) {\n        sunk = true;\n      }\n    }\n\n    const hit = function (number) {\n      let index = healthBar.indexOf(number);\n      healthBar[index] = \"X\";\n      checkSunk();\n    }\n\n    return {\n      getshipLength,\n      getSunk,\n      getCoords,\n      getHealthBar,\n      hit,\n      \n    };\n  };\n  \nconst Gameboard = (\n  playerNumber,\n  defeated = false\n    \n) => {\n\n  const makeCoordinates = () => {\n    let coordinates = [];\n    for(let i = 0; i < 100; i++) {\n      let newSquare = {struck: false, hasShip: false, squareId: i};\n      coordinates.push(newSquare);\n    }\n    return coordinates;\n  }\n\n  let coordinates = makeCoordinates();\n  let shipsArray = [];\n\n\n  const createShip = (size, coords) => {\n    let newShip = Ship(size, false, coords);\n    placeShip(coords); // mark square as hasShip true\n    shipsArray.push(newShip) // Save ship in array\n    return newShip;\n  }\n\n  function placeShip(coords) {\n    for(let i = 0; i < coords.length; i++) {\n      let currentCoordinates = coords[i];\n      let currentSquare = findSquare(currentCoordinates);\n      currentSquare.hasShip = true;\n    }\n  }\n\n  function findShip(coord) {\n    for(let i = 0; i < shipsArray.length; i++) {\n      let currentShipCoords = shipsArray[i].getCoords();\n      if(currentShipCoords.includes(coord)) {\n        return shipsArray[i];\n      }\n    }\n  }\n\n  function findSquare(coord) {\n    for(let i = 0; i < coordinates.length; i++) {\n      let currentSquare = coordinates[i];\n      if(currentSquare.squareId == coord) {\n        return currentSquare;\n      }\n    }\n  }\n\n  const receiveAttack = (coord) => {\n    let targetSquare = findSquare(coord);\n    targetSquare.struck = true;\n    if(targetSquare.hasShip) {\n      let targetShip = findShip(coord);\n      targetShip.hit(coord); // hit message to ship\n    }\n    checkDefeat();\n  }\n/* \n\n1 ship of 5\n2 ship of 4\n3 ship of 3\n4 ship of 2\n\n*/\n\nconst checkDefeat = () => {\n  let fleet = shipsArray.length;\n  for(let i = 0; i < shipsArray.length; i++) {\n    if(shipsArray[i].getSunk()) {\n      fleet--;\n    }\n  }\n  if(fleet == 0) {\n    defeated = true;  \n    return true;\n  } else {return false}\n}\n\n  const getPlayerNumber = () => playerNumber;\n  const getCoord = (num) => coordinates[num];\n  const getCoords = () => coordinates;\n  const getDefeated = () => defeated;\n  \n\n  return {\n    \n    getPlayerNumber,\n    getCoords,\n    getCoord,\n    createShip,\n    receiveAttack,\n    getDefeated\n  };\n\n}\n\n// factory function to create Players\nconst Player = (\n  playerNumber\n) => {\n\n  const createGameBoard = () => {\n    let newBoard = Gameboard(playerNumber);\n    return newBoard;\n  }\n  let gameBoard = createGameBoard();\n\n   \n  // Sends attack from Human Player to Computer GameBoard\n  //// Will be called from DOM on click\n  function humanShootsComputer(compGB, coord) {\n    let computerGameBoard = compGB;\n    computerGameBoard.receiveAttack(coord);  \n  }\n\n  //Sends attack from Computer Player to Human GameBoard\n  //// Will be called as part of the game loop\n  function computerShootsHuman(humanGB) {\n    let legalMove = findLegalMove(humanGB);\n    humanGB.receiveAttack(legalMove);\n  }\n\n\n  function findLegalMove(humanGB) {\n    let coordinates = humanGB.getCoords();\n    for(let i = 0; i < 100; i++) {\n      let randoNumber = Math.floor(Math.random() * Math.floor(100));\n      for(let i = 0; i < coordinates.length; i++) {\n        if(coordinates[i].squareId == randoNumber) {\n          if(coordinates[i].struck == false) {\n            \n            return randoNumber;\n          }\n        }\n      } \n    }\n  }\n\n  function testHitAllSquares(exemption) {\n    let coordinates = gameBoard.getCoords();\n    for(let i = 0; i < coordinates.length; i++) {\n      let currentSquare = coordinates[i];\n      if(currentSquare.squareId != exemption) {\n        currentSquare.struck = true;\n      } else if (currentSquare.squareId == exemption) {\n        currentSquare.struck = false;\n      }\n    }\n  }\n\nconst getPlayerNumber = () => playerNumber;\nconst getGameBoard = () => gameBoard;\n\n\n  return {\n    getPlayerNumber,\n    getGameBoard,\n    humanShootsComputer,\n    findLegalMove,\n    testHitAllSquares,\n    computerShootsHuman\n  };\n};\n\nconst Game = (\n\n) => {\n\n  let playersArray = [];\n  const createPlayer = (num) => {\n    let newPlayer = Player(num);\n    playersArray.push(newPlayer);\n    return newPlayer;\n  }\n  let playerOne = createPlayer(1);\n  let playerTwo = createPlayer(2);\n\n  function getPlayer(num) {\n    for(let i = 0; i < playersArray.length; i++) {\n      if(playersArray[i].getPlayerNumber() == num) {\n        return playersArray[i];\n      }\n    }\n  } \n\n  return {\n    getPlayer,\n    \n  };\n};\n\n\n\nexport {\n  Game\n};\n//////////////////// Exports\n// module.exports = {\n//     Ship,\n//     Gameboard,\n//     Player,\n//     Game\n// };\n\n","import { Game } from \"./ships.js\";\n\nlet newGame = Game();\nlet humanPlayer = newGame.getPlayer(1);\nlet computerPlayer = newGame.getPlayer(2);\n\nlet humanGB = humanPlayer.getGameBoard();\nlet computerGB = computerPlayer.getGameBoard();\n\nlet humanCoordinates = humanGB.getCoords();\nlet computerCoordinates = computerGB.getCoords();\n\nlet jollyRoger = humanGB.createShip(3, [71, 72, 73]);\nlet dingy = humanGB.createShip(1, [32]);\nlet destroyer = humanGB.createShip(5, [17, 27, 37, 47, 57]);\n// functions for loading the page\n\n// functions to create human-fleet\nfunction createHumanFleet() {\n    console.log('made it to create fleet');\n    let humanFleet = document.querySelector('#human-fleet');\n    let humanCoordinates = humanGB.getCoords();\n    for(let i = 0; i < humanCoordinates.length; i++) {\n        let newTile = document.createElement('div');\n        newTile.classList.add(\"square\");\n        let index = humanCoordinates[i].squareId;\n        newTile.setAttribute(\"data-num\", index)\n        if(humanCoordinates[i].hasShip == true) {\n            newTile.classList.add(\"ship\");\n        } else if (humanCoordinates[i].hasShip == false) {\n            newTile.classList.add(\"water\");\n        }\n        humanFleet.appendChild(newTile);\n    } \n}\n\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    createHumanFleet();\n}, false);\n// functions to create enemy-ocean\n\n// restart settings\n"],"sourceRoot":""}